datasource db {
  provider = "postgresql"
  url      = env("POSTGRESQL_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id          Int       @id @default(autoincrement())
  auth0Id     String    @unique
  email       String    @unique
  fullName    String?
  firstName   String?
  lastName    String?
  nickname    String?
  picture     String?
  accessToken String?
  isVerified  Boolean   @default(true)
  lastLogin   DateTime?

  role        UserRole  @default(PARTNER_USER)

  bankId      Int?
  bank        Bank?     @relation(fields: [bankId], references: [id])

  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt

  agreementsCreated Agreement[] @relation("AgreementsCreatedBy")
}

model Bank {
  id                 Int      @id @default(autoincrement())
  name               String   @db.VarChar(255)
  registrationNumber String?  @unique
  taxId              String?  @unique
  contactEmail       String   @db.VarChar(255)
  phone              String?  @db.VarChar(20)
  address            String?
  city               String?  @db.VarChar(100)
  state              String?  @db.VarChar(100)
  country            String?  @db.VarChar(100)
  postalCode         String?  @db.VarChar(20)
  bankType           BankType @default(MICROFINANCE)
  ceoName            String?  @db.VarChar(100)
  ceoEmail           String?  @db.VarChar(255)
  ctoName            String?  @db.VarChar(100)
  ctoEmail           String?  @db.VarChar(255)

  licenseNumber  String?
  branchCount    Int?    @default(0)
  isKYCCompliant Boolean @default(false)
  isAMLCompliant Boolean @default(false)

  supportedCurrencies Json?
  swiftCode           String?  @db.VarChar(20)
  notes               String?  @db.Text

  users               User[]
  agreements          Agreement[] @relation("AgreementBanks")

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Agreement {
  id               Int             @id @default(autoincrement())
  title            String          @db.VarChar(255)
  description      String?         @db.Text
  agreementDate    DateTime        @default(now())
  expiryDate       DateTime?
  status           AgreementStatus @default(PENDING)
  agreementType    AgreementType
  digitalSignature String?         @db.Text
  pdfFilePath      String?

  createdById Int
  createdBy   User @relation("AgreementsCreatedBy", fields: [createdById], references: [id])

  banks Bank[] @relation("AgreementBanks")

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum UserRole {
  ADMIN
  PARTNER_USER
}

enum BankType {
  COMMERCIAL
  MICROFINANCE
  COOPERATIVE
  INVESTMENT
  DEVELOPMENT
  CENTRAL
  SWIFT
  OTHER
}

enum AgreementStatus {
  PENDING
  APPROVED
  REJECTED
  EXPIRED
}

enum AgreementType {
  LOAN
  PARTNERSHIP
  SERVICE
  NDA
  OTHER
}
